image: python:3.10

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

stages:
  - build
  - lint
  - tests
  - deploy

.ssh_key_template: &ssh_key_template
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - mkdir -p ~/.ssh
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
  after_script:
    - rm -f ~/.ssh/id_rsa

.docker_login: &docker_login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.docker_common: &docker_common
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:20.10.5-dind

build:
  stage: build
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $DOCKER_IMAGE:latest --tag $DOCKER_IMAGE:$DOCKER_TAG --tag $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest

lint:
  stage: lint
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:$DOCKER_TAG
    - docker run $DOCKER_IMAGE:$DOCKER_TAG bash -c 'make lint'
  needs:
    - build

unit:
  stage: tests
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:$DOCKER_TAG
    - docker run $DOCKER_IMAGE:$DOCKER_TAG bash -c 'make tests_unit'
  needs:
    - build

integration:
  stage: tests
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:$DOCKER_TAG
    - docker run $DOCKER_IMAGE:$DOCKER_TAG bash -c 'make tests_integration'
  needs:
    - build

deploy:
  stage: deploy
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "false"
  script:
    - python3 -m pip install ansible==8.4.0
    - make deploy DOCKER_IMAGE=$DOCKER_IMAGE DOCKER_TAG=$DOCKER_TAG
  when: manual
  <<: *ssh_key_template

destroy:
  stage: deploy
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "false"
  script:
    - python3 -m pip install ansible==8.4.0
    - make destroy
  needs:
    - deploy
  when: manual
  <<: *ssh_key_template
